//Напишите программу, в которой есть базовый класс с открытым целочисленным полем. В классе описан виртуальный индексатор, позволяющий считывать цифры в десятичном представлении числа (значение поля). На основе базового класса создается производный класс, в котором появляется еще одно открытое целочисленное поле. В производном классе описывается версия индексатора с двумя индексами: первый индекс определяет поле, значение которого используется, а второй индекс определяет разряд, для которого считывается цифра. Индексатор с одним индексом переопределяется так, что вычисления (считывание цифры в десятичном представлении числа) производятся на основе значения, равного сумме значений полей индексируемого объекта.

// Создание объекта производного класса
DerivedClass obj = new DerivedClass
{
    Value = 12345,
    AnotherValue = 67890
};

// Использование индексатора с одним индексом
Console.WriteLine("Digit at index 0: " + obj[0]); // Выведет 7
Console.WriteLine("Digit at index 1: " + obj[1]); // Выведет 2
Console.WriteLine("Digit at index 2: " + obj[2]); // Выведет 9

// Использование индексатора с двумя индексами
Console.WriteLine("Digit at index 0 of Value: " + obj[0, 0]); // Выведет 1
Console.WriteLine("Digit at index 1 of AnotherValue: " + obj[1, 1]); // Выведет 8